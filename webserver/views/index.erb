<html>
  <head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.30.0/codemirror.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">
  <style>
    .code-sample {
      border-bottom: 3px solid  #ddd;
    }
    .footer {
      border-top: 3px solid #ddd;
    }

    .subtitle {
      font-size: .5em;
    }
  </style>
  </head>
  <body>
      <header>
        <h1>
          Ruby Proctor
          <small class="subtitle text-muted">Rapidly Develop New Rubocop Rules</small>
        </h1>
      </header>

      <div class="row code-sample">
        <div class="col-md-6">
          <textarea class="rc-code-sample-box">
# Sample Code

Blah.test</textarea>
        </div>

        <div class="col-md-6">
          <textarea class="rc-parse-result-box" cols="65" rows="8"></textarea>
        </div>
      </div>

      <div class="row rc-rule">
        <div class="col-md-6">
          <textarea class="rc-rule-box">
# Sample Rubocop Rule

module RuboCop
  module Cop
    module Style
      # Prevent calling .test on any Ruby object
      class DummyCop < Cop
        MSG = "Don't call .test".freeze

        def_node_matcher :test,
                         '(send _ :test)'

        def on_send(node)
          if test(node)
            add_offense(node, :expression)
          end
        end
      end
    end
  end
end
          </textarea>
        </div>

        <div class="col-md-6">
          <textarea class="rc-rule-evaluation-box" cols="65" rows="8"></textarea>
        </div>
      </div>

      <div class="footer text-right">
        <!-- Begin MailChimp Signup Form -->
        <link href="//cdn-images.mailchimp.com/embedcode/horizontal-slim-10_7.css" rel="stylesheet" type="text/css">
        <style type="text/css">
          /*#mc_embed_signup{background:#fff; font:14px Helvetica,Arial,sans-serif; width:100%;}*/
          /* Add your own MailChimp form style overrides in your site stylesheet or in this style block.
             We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
        </style>
        <div id="mc_embed_signup">
        <form action="https://rubyproctor.us17.list-manage.com/subscribe/post?u=8582ffd7d431ccc9ab3fc5a4e&amp;id=e8567e5da9" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
            <div id="mc_embed_signup_scroll">
By <a href="github.com/squidarth">@squidarth</a>. Tweet <a href="twitter.com/sidpshanker">@sidpshanker</a>
          <input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
            <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_8582ffd7d431ccc9ab3fc5a4e_e8567e5da9" tabindex="-1" value=""></div>
            <div class="clear"><input type="submit" value="Get Updates" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
            </div>
        </form>
        </div>
      </div>

    <script type="text/javascript" src="https://code.jquery.com/jquery-git.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.30.0/codemirror.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.30.0/mode/ruby/ruby.min.js"></script>
    <script type="text/javascript">
      function runRules(codeSampleText, ruleText) {

        $.ajax({

        });
      }

      var codeSampleArea = $(".rc-code-sample-box");
      var codeSampleCodeMirror = CodeMirror.fromTextArea(codeSampleArea[0], {
        value: "# Code Sample",
        mode: "ruby",
        lineNumbers: true,
        gutters: ['bordered'],
      });

      var codeRuleArea = $(".rc-rule-box");
      var codeRuleCodeMirror = CodeMirror.fromTextArea(codeRuleArea[0], {
        value: "# Rubocop rule class",
        mode: "ruby",
        lineNumbers: true,
        gutters: ['bordered'],
      });
      var parseResultBox = $(".rc-parse-result-box");
      var parseResultCodeMirror = CodeMirror.fromTextArea(parseResultBox[0], {
        lineWrapping: true,
        gutters: ['bordered']
      });
      var ruleResultBox = $(".rc-rule-evaluation-box");
      var ruleResultCodeMirror = CodeMirror.fromTextArea(ruleResultBox[0], {
        gutters: ['bordered']
      });

      function runRules(codeSampleText, ruleText) {
        $.ajax({
          method: "POST",
          data: {
            code: codeSampleText,
            rule: ruleText
          },
          url: '/rubocop-rule-eval'
        }).done(function(response) {
          ruleResultCodeMirror.setValue(response.value);
        });
      }

      var codeParsingTimeout, ruleRunningTimout = null;

      function codeSampleReload (cm) {
        cm.getValue();
        if (codeParsingTimeout) {
          clearTimeout(codeParsingTimeout);
        }

        codeParsingTimeout= setTimeout(function () {
          $.ajax({
            method: "POST",
            url: "/parse",
            data: {
              code: cm.getValue()
            }
          }).done(function (response) {
            parseResultCodeMirror.setValue(response.ast)
          });
        }, 1000);

        if (ruleRunningTimout) {
          clearTimeout(ruleRunningTimout);
        }

        ruleRunningTimout = setTimeout(function () {
          runRules(cm.getValue(), codeRuleCodeMirror.getValue());
        }, 1000);
      }

      codeSampleCodeMirror.on('change', codeSampleReload);

      codeRuleCodeMirror.on('change', function(cm) {
        if (ruleRunningTimout) {
          clearTimeout(ruleRunningTimout);
        }

        ruleRunningTimout = setTimeout(function () {
          runRules(codeSampleCodeMirror.getValue(), cm.getValue());
        }, 1000);
      });

      $(document).ready(function () {
        codeSampleReload(codeSampleCodeMirror);
      });
    </script>

  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-108310612-1"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'UA-108310612-1');
  </script>
  </body>
</html>
